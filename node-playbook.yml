---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

# Adding necessary steps to use containerd as CRI runtime.
  - name: create containerd.conf file
    copy: 
      dest: /etc/modules-load.d/containerd.conf
      content: |
        overlay
        br_netfilter

  - name: modprobe overlay
    command: modprobe overlay
    become : yes

  - name: modprobe br_netfilter
    command: modprobe br_netfilter
    become : yes

  - name: Setup required sysctl params, these persist across reboots. 
    copy:
      dest: /etc/sysctl.d/99-kubernetes-cri.conf
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1

  - name:  Apply sysctl params without reboot
    command: sysctl --system
    become: yes

  - name: Install container runtime
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd
    notify:
      - containerd status

  - name: create containerd folder
    ansible.builtin.file:
      path: /etc/containerd
      state: directory
      mode: '0755'

  - name: Generate containerd config file
    ansible.builtin.shell: containerd config default | tee /etc/containerd/config.toml

  - name: Set SystemCgroup
    ansible.builtin.command: sed -i 's/ SystemdCgroup = false/  SystemdCgroup = true/' /etc/containerd/config.toml
  
  - name: Restart containerd
    service:
      state: restarted
      name: containerd

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      line: Environment="KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"

  - name: Restart kubelet
    service:
      state: restarted
      daemon_reload: yes
      name: kubelet

  - name: Copy the join command to server location
    become: false
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  handlers:
    - name: containerd status
      service: name=containerd state=started  
 